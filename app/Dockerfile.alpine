FROM alpine:3.13.0
LABEL Maintainer="Erol Keskiner" Contact=erolksknr@gmail.com

RUN adduser -D appuser

ARG PORT=8000
ARG HOST=0.0.0.0
ARG FLASK_ENV=development

# ensure that no partial output is held in a buffer somewhere, send all output to stdout
ENV PYTHONUNBUFFERED=1

# Make sure that python and pip is installed
RUN echo "**** install Python and Bash ****" && \
    apk update && \
    apk add --no-cache python3 bash && \
    if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \
    \
    echo "**** install pip ****" && \
    python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --no-cache --upgrade pip setuptools wheel && \
    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
    echo "**** install gcc and musl ****" && \
    apk add --no-cache gcc musl-dev && \
    rm -f /usr/libexec/gcc/x86_64-alpine-linux-musl/6.4.0/cc1obj && \
    rm -f /usr/libexec/gcc/x86_64-alpine-linux-musl/6.4.0/lto1 && \
    rm -f /usr/libexec/gcc/x86_64-alpine-linux-musl/6.4.0/lto-wrapper && \
    rm -f /usr/bin/x86_64-alpine-linux-musl-gcj




RUN mkdir -p /web/app
WORKDIR /web/app
COPY dist/*.whl /web/app/.
COPY config.py /web/app/.

RUN pip install *.whl

ENV FLASK_RUN_PORT=$PORT
ENV FLASK_RUN_HOST=$HOST
ENV FLASK_ENV=$FLASK_ENV

RUN chown -R appuser:appuser /web/app

USER appuser

ENV PORT=${PORT}
EXPOSE $PORT

ENTRYPOINT gunicorn --bind 0.0.0.0:${PORT} --graceful-timeout 30 "app:create_app()"